{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"subpatch: fearless multi-repository management - stay relaxed!","text":"<p>Welcome to the website of subpatch. The tool that does multi-repository management right. Don't worry, stay relaxed!</p> <p>Currently this project is just an idea. No code yet. But the general concept is already proven and works!</p> <p>The subpatch project will provide two things:</p> <ul> <li>A command line tool called <code>subpatch</code> to manage subprojects (in a monorepo). The github   repo is subpatch.</li> <li>Documentation, explanations and opinions about multi repo setups and   management. This is this website.</li> </ul> <p>If you are currently using git-submodules or repo and you are frustrated, <code>subpatch</code>  will be mostly your solution! If you are interested, email me.</p>"},{"location":"#subpatch-usecases","title":"subpatch usecases","text":"<p>subpatch is interesting for you if you want to do the following tasks:</p> <ul> <li>assemble a monorepo from multiple repositories</li> <li>integrate third party dependencies into your project as source files</li> <li>maintain a local fork (=linear patchstack) of a third party dependency</li> </ul>"},{"location":"#subpatchs-concept","title":"subpatch's concept","text":"<p>subpatch will be a subprojects management tool based on the following ideas:</p> <ul> <li>It's based on the idea of monorepos. The files of subprojects are added as   normal files to the superproject.  In most cases this will be just a git   repository.</li> <li>The metadata of a subproject is saved in a git-config styled configuration file.</li> <li>Modifications of the subproject are possible and subpatch helps to maintain   a linear patch stack of the modifications.</li> <li>Importing new versions of the subproject is possible and subpatch helps to   rebase the local modifications.</li> </ul>"},{"location":"#subpatch-main-difference","title":"subpatch main difference","text":"<p>subpatch is based on the concept of monorepos. When you use subpatch the subprojects are not git repository itself. The files of the subprojects are added as files to the superproject. You will only have to deal with a single git repository.</p> <p>This is in contrast to other tools, e.g.</p> <ul> <li>git-submodules</li> <li>repo</li> <li>kas</li> <li>west</li> </ul> <p>These tools manage multi git repository management and try to combine them into a big superproject.</p>"},{"location":"imprint/","title":"Imprint","text":"<p>This website is created and maintained by</p> <ul> <li>name: Stefan Lengfeld</li> <li>address: Germany, 53721 Siegburg</li> <li>e-mail: stefan+subpatch@lengfeld.xyz</li> </ul> <p>The website's source is available at subpatch-website.</p>"}]}